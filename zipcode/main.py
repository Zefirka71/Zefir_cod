import asyncio
import re

from telethon import TelegramClient, events
import requests

api_id = 'your_id'
api_hash = 'your_hash'

bot_token = 'your_token'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def handle_request(event):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_input = event.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –ø–æ—á—Ç–æ–≤—ã–º –∏–Ω–¥–µ–∫—Å–æ–º
    if user_input.isdigit():
        # –ó–∞–ø—Ä–æ—Å –ø–æ –ø–æ—á—Ç–æ–≤–æ–º—É –∏–Ω–¥–µ–∫—Å—É
        await search_by_postal_code(event, user_input)
    else:
        # –ü–æ–∏—Å–∫ –ø–æ –∞–¥—Ä–µ—Å—É –≥–æ—Ä–æ–¥–∞
        match = re.match(r'^[a-zA-Z]+(?:[\s-][a-zA-Z]+)*$', user_input)
        if match:
            await search_by_city(event, user_input)
        else:
            message = "üèôÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –∏–ª–∏ –∞–¥—Ä–µ—Å –≥–æ—Ä–æ–¥–∞."
            await event.respond(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –ø–æ—á—Ç–æ–≤–æ–º—É –∏–Ω–¥–µ–∫—Å—É
async def search_by_postal_code(event, user_input):
    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ —Å–ø–∏—Å–∫—É —Å—Ç—Ä–∞–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞
    for country_code in ['US', 'UK', 'RU', 'FR']:
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API zippopotam –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω—ã
        url = f'https://api.zippopotam.us/{country_code}/{user_input}'

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∫ API zippopotam
        response = requests.get(url)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if response.status_code == 200:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
            data = response.json()

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
            post_code = data.get('post code')
            country = data.get('country')
            country_abbreviation = data.get('country abbreviation')
            places = data.get('places')

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            message = f"üì¨ –ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: {post_code}\nüåç –°—Ç—Ä–∞–Ω–∞: {country} ({country_abbreviation})\n"
            for place in places:
                place_name = place.get('place name')
                state = place.get('state')
                state_abbreviation = place.get('state abbreviation')
                longitude = place.get('longitude')
                latitude = place.get('latitude')
                message += f"üéØ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {place_name}\nüåÅ –û–±–ª–∞—Å—Ç—å/–®—Ç–∞—Ç: {state} ({state_abbreviation})\nüìè –î–æ–ª–≥–æ—Ç–∞: {longitude}\nüìè –®–∏—Ä–æ—Ç–∞: {latitude}\n\n"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await event.respond(message)
            return  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

    # –ï—Å–ª–∏ –ø–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    message = "üõë –ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö."
    await event.respond(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É –≥–æ—Ä–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –°–®–ê)
async def search_by_city(event, user_input):
    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –≤—Å–µ–º —à—Ç–∞—Ç–∞–º –°–®–ê
    for state_code in ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY']:
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API zippopotam –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —à—Ç–∞—Ç–∞ –∏ –≥–æ—Ä–æ–¥–∞
        url = f'https://api.zippopotam.us/US/{state_code}/{user_input}'

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∫ API zippopotam
        response = requests.get(url)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if response.status_code == 200:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
            data = response.json()

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
            country = "United States"  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
            place_name = data.get('place name')
            state = data.get('state')
            state_abbreviation = data.get('state abbreviation')
            country_abbreviation = data.get('country abbreviation')
            places = data.get('places')

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            message = f"üåç –°—Ç—Ä–∞–Ω–∞: {country}\nüèôÔ∏è –ì–æ—Ä–æ–¥: {place_name}\nüåÅ –®—Ç–∞—Ç: {state} ({state_abbreviation})\n"
            for place in places:
                place_name = place.get('place name')
                state = place.get('state')
                state_abbreviation = place.get('state abbreviation')
                longitude = place.get('longitude')
                latitude = place.get('latitude')
            message += f"üìè –î–æ–ª–≥–æ—Ç–∞: {longitude}\nüìè –®–∏—Ä–æ—Ç–∞: {latitude}\n\n"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await event.respond(message)
            return  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

    # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–æ –≤—Å–µ—Ö —à—Ç–∞—Ç–∞—Ö, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    message = "üõë –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –°–®–ê."
    await event.respond(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ Telegram
    client = TelegramClient('session_name', api_id, api_hash)

    # –û–∂–∏–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    @client.on(events.NewMessage)
    async def my_event_handler(event):
        await handle_request(event)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä–∞–º Telegram
    await client.start(bot_token=bot_token)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await client.run_until_disconnected()

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
if __name__ == '__main__':
    asyncio.run(main())

